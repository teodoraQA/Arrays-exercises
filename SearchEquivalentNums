import java.util.HashMap;
import java.util.Scanner;

public class SearchEquivalentNums {
    public static void main(String[] args) {
        int[] arr = new int[]{10, 1, 2, 6, 8, 9, 7, 5, 3, 4, 6};
        sortArray(arr);

        boolean isFound = false;
        int repeatingNum = 0;
        for (int i = 0; i < arr.length - 1; i++) {
            if (arr[i] == arr[i + 1]) {
                repeatingNum = arr[i];
                isFound = true;
                break;
            }
        }
        if (isFound) {
            System.out.println(repeatingNum);
        } else {
            System.out.println("there is no repeting num");
        }

    }

    public static void sortArray(int[] arr) {
        for (int i = 0; i < arr.length; i++) {
            for (int j = i + 1; j < arr.length; j++) {
                if (arr[i] > arr[j]) {
                    int buffer = arr[i];
                    arr[i] = arr[j];
                    arr[j] = buffer;
                }
            }
        }
    }

} //SearchEquivalentNums

// solution with 2 for loops
//
//int[] arr = new int[]{10, 1, 2, 6, 8, 9, 7, 5, 3, 4, 6};
//int numToSearch = 0;
//        for (int i = 0; i < arr.length; i++) {
//            numToSearch = arr[i];
//            boolean isFound = false;
//            for (int j = i + 1; j < arr.length; j++) {
//                if (numToSearch == arr[j]) {
//                    isFound = true;
//                    break;
//                }
//            }
//            if (isFound) {
//                break;
//            }
//        }
//        System.out.println("number that repeats " + numToSearch);
